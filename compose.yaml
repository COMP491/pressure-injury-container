services:
  proxy:
    build: proxy
    restart: always
    ports:
      - 8080:80
      - 8081:81
    depends_on: 
      - ai
      - backend
    networks:
      - frontnet
      - backnet
  ai: 
    build: ai
    restart: always
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
    networks:
      - backnet
      
  db:
    build: db
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="$$(cat /run/secrets/db-password)" --silent']
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backnet
    environment:
      - MYSQL_DATABASE=wounddb
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
    
  backend:
    build: backend
    depends_on:
      db:
        condition: service_healthy
    restart: always
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
    networks:
      - backnet

volumes:
  db-data:

networks:
  frontnet:
  backnet:
  
secrets:
  db-password:
    file: db/password.txt

